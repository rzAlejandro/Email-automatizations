# -*- coding: utf-8 -*-
"""Copia de Correo diario recomendaciones.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nDp-Lr7MYdGepm1AsBEmY2xYpVmS0Cf-
"""
import os
import openai
import google.generativeai as genai
import smtplib
import re
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

# Función para obtener noticias de tecnología
def obtener_openai(prompt):
    response = openai.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "Eres un experto sistema recomendador."},
            {"role": "user", "content": prompt}
        ]
    )
    return response.choices[0].message.content

def obtener_genai(prompt):
    response = genai.GenerativeModel("gemini-pro").generate_content(prompt)
    return response.text

def formatear_texto_a_html(texto):
    """
    Convierte texto en formato Markdown (**negrita**) a HTML (<b>negrita</b>).
    """
    texto_html = re.sub(r"\*\*(.*?)\*\*", r"<b>\1</b>", texto)  # Convierte **texto** a <b>texto</b>
    return texto_html.replace("\n", "<br>")  # Reemplaza saltos de línea con <br> en HTML

# Función para enviar el correo
def enviar_correo(recomendacion):
    msg = MIMEMultipart()
    msg["From"] = EMAIL_REMITE
    msg["To"] = EMAIL_DESTINO
    msg["Subject"] = "Recomendaciones diarias"

    # Convertir el mensaje con formato HTML
    recomendacion_html = formatear_texto_a_html(recomendacion)
    cuerpo_mensaje = f"""
    <html>
    <body>
        <p>Hola,</p>
        <p>Aquí tienes la recomendación diaria:</p>
        <p>{recomendacion_html}</p>
        <p>Saludos.</p>
    </body>
    </html>
    """

    msg.attach(MIMEText(cuerpo_mensaje, "html"))  # Enviar como HTML

    try:
        server = smtplib.SMTP("smtp.gmail.com", 587)
        server.starttls()
        server.login(EMAIL_REMITE, EMAIL_PASSWORD)
        server.sendmail(EMAIL_REMITE, EMAIL_DESTINO, msg.as_string())
        server.quit()
        print("Correo enviado exitosamente.")
    except Exception as e:
        print(f"Error enviando el correo: {e}")

# Ejecutar funciones
prompt = (
        "Actua como el mejor periodista del mundo. Escribe 3 apartados de recomendaciones, sin añadir ninguna introducción, solo los 3 apartados:\n"
        "1. Musicales: tres artistas y dos canciones por cada artista, teniendo en cuenta que mis gustos son: pop, rock pop, rock,  flamenco, indie, reggaeton o música latina pero más comercial...\n"
        "2. Alimentaria: 3 recetas y la lista de ingredientes de cada una. Si tienes acceso a internet, calcula cuanto costaría realizar la receta en base a los precios de los productos en el Mercadona.\n"
        "3. Lectora: dos libros y sus autores, teniendo en cuenta que mis gustos son: novelas, novelas históricas, thriller, policíacas, de desarrollo personal. Además, incluye un breve sinopsis. Si tienes acceso a internet, añade la puntuación del libro en Amazon y su precio \n"
        "Cada sección debe estar bien diferenciada con un título. No deben ser secciones extensas, quiero que se pueda leer en 10 minutos como máximo. Deben estar escritas en español, en un tono sencillo y conciso. Utiliza puntos para separar las noticias\n"
    )

#Credenciales OpenAI
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
client = openai.OpenAI(api_key=OPENAI_API_KEY)

#Credenciales GenAI
print(os.getenv("GENAI_API_KEY"))
genai.configure(api_key=os.getenv("GENAI_API_KEY"))

# Configuración del correo
EMAIL_REMITE = "automatizacionesrrzzalejandro@gmail.com"
EMAIL_DESTINO = "rrzzalejandro@gmail.com"
EMAIL_PASSWORD = os.getenv("EMAIL_PASSWORD")

#recomendacion = obtener_openai(prompt)
recomendacion = obtener_genai(prompt)
enviar_correo(recomendacion)
